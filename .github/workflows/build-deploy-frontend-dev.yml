name: Build and deploy frontend Dev

on:
  workflow_dispatch:

jobs:
  pr-data:
    name: Get data for merged PR
    permissions:
      contents: read
      pull-requests: read
    uses: ./.github/workflows/call_get_pr_data.yml

  build-frontend:
    name: Build and push Frontend
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/call_build-push-docker-image.yml
    with:
      aws-region: eu-west-2
      cache: false
    secrets:
      dynatrace_registry: ${{ secrets.DYNATRACE_REGISTRY_NAME }}
      dynatrace_token: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
      deployer_role: ${{ secrets.DEV_DEPLOYER_ROLE }}
      ecr_repo: ${{ secrets.DEV_TOOLING_ECR_FRONTEND_REPO }}
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    #   - name: Set up Docker CLI
    #     uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
    #   - name: Assume AWS DEPLOYER role in tooling acct
    #     uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
    #     with:
    #       role-to-assume: ${{ env.DEPLOYER_ROLE }}
    #       aws-region: ${{ env.AWS_REGION }}
    #   - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
    #   - name: Login to GDS Dev Dynatrace Container Registry
    #     uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
    #     with:
    #       registry: khw46367.live.dynatrace.com
    #       username: khw46367
    #       password: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
    #   - name: Build image metadata
    #     id: metadata
    #     uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
    #     with:
    #       tags: |
    #         type=ref,event=branch
    #         type=ref,event=pr
    #         type=sha
    #   - name: Build, tag and push frontend
    #     uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
    #     with:
    #       context: .
    #       labels: ${{ steps.metadata.outputs.labels }}
    #       push: true
    #       tags: "${{ steps.login-ecr.outputs.registry }}/${{ env.DEV_TOOLING_ECR_FRONTEND_REPO }}:${{ github.sha}}"
    #       # cache-from: type=gha        # Don't do layer caching in dev workflows for storage reasons
    #       # cache-to: type=gha,mode=max # Don't do layer caching in dev workflows for storage reasons
  build-sidecar:
    name: Build and push Basic Auth Sidecar
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/call_build-push-docker-image.yml
    with:
      aws-region: eu-west-2
      cache: false
      context: basic-auth-sidecar
    secrets:
      dynatrace_registry: ${{ secrets.DYNATRACE_REGISTRY_NAME }}
      dynatrace_token: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
      deployer_role: ${{ secrets.DEV_DEPLOYER_ROLE }}
      ecr_repo: ${{ secrets.DEV_BASIC_SIDECAR_ECR_REPO }}
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    #   - name: Set up Docker CLI
    #     uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
    #   - name: Assume AWS DEPLOYER role in tooling acct
    #     uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
    #     with:
    #       role-to-assume: ${{ env.DEPLOYER_ROLE }}
    #       aws-region: ${{ env.AWS_REGION }}
    #   - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
    #   - name: Build, tag, and push basic-auth-sidecar
    #     uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
    #     with:
    #       context: basic-auth-sidecar
    #       labels: ${{ needs.pr-data.outputs.docker-labels }}
    #       push: true
    #       tags: "${{ steps.login-ecr.outputs.registry }}/${{ env.DEV_BASIC_SIDECAR_ECR_REPO }}:${{ github.sha }}"
    #       # cache-from: type=gha        # Don't do layer caching in dev workflows for storage reasons
    #       # cache-to: type=gha,mode=max # Don't do layer caching in dev workflows for storage reasons
  build-service-down:
    name: Build and push Service Down Page
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/call_build-push-docker-image.yml
    with:
      aws-region: eu-west-2
      cache: false
      context: service-down-page-config
    secrets:
      dynatrace_registry: ${{ secrets.DYNATRACE_REGISTRY_NAME }}
      dynatrace_token: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
      deployer_role: ${{ secrets.DEV_DEPLOYER_ROLE }}
      ecr_repo: ${{ secrets.DEV_SERVICE_DOWN_ECR_REPO }}
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    #   - name: Set up Docker CLI
    #     uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
    #   - name: Assume AWS DEPLOYER role in tooling acct
    #     uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
    #     with:
    #       role-to-assume: ${{ env.DEPLOYER_ROLE }}
    #       aws-region: ${{ env.AWS_REGION }}
    #   - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
    #   - name: Build, tag, and push service down page
    #     uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
    #     with:
    #       context: service-down-page-config
    #       labels: ${{ needs.pr-data.outputs.docker-labels }}
    #       push: true
    #       tags: "${{ steps.login-ecr.outputs.registry }}/${{ env.DEV_SERVICE_DOWN_ECR_REPO }}:${{ github.sha }}"
    #       # cache-from: type=gha        # Don't do layer caching in dev workflows for storage reasons
    #       # cache-to: type=gha,mode=max # Don't do layer caching in dev workflows for storage reasons
  deploy:
    needs:
      - build-frontend
      - build-sidecar
      - build-service-down
      - pr-data
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ secrets.DEV_DEPLOY_ROLE }}
          aws-region: eu-west-2

      - name: Upload frontend Terraform files
        working-directory: ci/terraform
        env:
          METADATA: ${{ needs.pr-data.outputs.data }}
        run: |
          echo "::group::Zip up frontend terraform"
          zip -r frontend.zip .
          echo "::endgroup::"

          echo "::group::Upload artifact to S3"
          OBJECT_VERSION="$(aws s3api put-object \
            --bucket ${{ secrets.DEV_ARTIFACT_BUCKET }} \
            --key frontend.zip \
            --body frontend.zip \
            --metadata "${METADATA}" \
            --query VersionId --output text)"
          echo "::endgroup::"
          echo "::notice title=Final artifact uploaded to S3::object: frontend.zip, version: ${OBJECT_VERSION}"
