AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Authentication Frontend application

Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    Description: The name of the environment to deploy to

  SubEnvironment:
    Type: String
    Description: >
      When deploying to dev, optionally configure which sub-environment to deploy to
      i.e. authdev1, authdev2. This feature is not available for route-to-live environments
    Default: none

  VpcStackName:
    Type: String
    Description: The name of the stack used to create the VPC

  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none

  DeploymentStrategy:
    Description: "Predefined deployment configuration for ECS application"
    Type: String
    Default: "None"
    # Allowed values: See https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html
    AllowedValues:
      - None
      - CodeDeployDefault.ECSCanary10Percent5Minutes
      - CodeDeployDefault.ECSCanary10Percent15Minutes
      - CodeDeployDefault.ECSAllAtOnce
      - ECSCanary50Percent5Minutes

  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Default: none

  BasicAuthSidecarRegistry:
    Type: String
    Default: 058264536367.dkr.ecr.eu-west-2.amazonaws.com/basic-auth-sidecar-image-repository-containerrepository-s9nnygnutubd

  ServiceDownPageRegistry:
    Type: String
    Default: 058264536367.dkr.ecr.eu-west-2.amazonaws.com/service-down-page-image-repository-containerrepository-5mf9vzblyt5l

Conditions:
  DeployServiceDownPage:
    Fn::Or:
      - Fn::Equals:
        - !Ref Environment
        - "integration"
      - Fn::Equals:
        - !Ref Environment
        - "production"

  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

  UseECSCanaryDeploymentStack:
    Fn::Not:
      - Fn::Equals:
        - !Ref DeploymentStrategy
        - None

  UseNginxSidecar:
  # TODO review this condition
    Fn::Equals:
      - !Ref Environment
      - "integration"

  UseSubEnvironment:
    Fn::And:
      - Fn::Equals:
        - !Ref Environment
        - dev
      - Fn::Not:
          - Fn::Equals:
            - !Ref SubEnvironment
            - none

  IsNotProduction:
    Fn::Not:
      - Fn::Equals:
        - !Ref Environment
        - production

Mappings:
  # see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-access-logs.html
  ElasticLoadBalancerAccountIds:
    eu-west-2:
      AccountId: "652711504416"
  EnvironmentConfiguration:
    authdev1:
      cloudfrontDistributionStackName: "authdev1-cloudfront"
      # TODO this is a placeholder, change this when orch stub is setup
      orchToAuthSigningPublicKey: |
        -----BEGIN PUBLIC KEY-----
        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHzG8IFx1jE1+Ul44jQk96efPknCX
        VxWS4PqLrKfR/31UQovFQLfyxA46uiMOvr7+0hRwFX1fQhagsIK+dfB5PA==
        -----END PUBLIC KEY-----
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      frontendAutoScalingMinCount: 2
      frontendAutoScalingMaxCount: 4
      frontendTaskDefinitionCpu: 512
      frontendTaskDefinitionMemory: 1024
      ipAllowList: ["217.196.229.77/32","217.196.229.79/32","217.196.229.80/32","217.196.229.81/32","51.149.8.0/25","51.149.8.128/29"]
      cloudwatchLogRetentionInDays: 1
      orchToAuthSigningPublicKey: |
        -----BEGIN PUBLIC KEY-----
        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHzG8IFx1jE1+Ul44jQk96efPknCX
        VxWS4PqLrKfR/31UQovFQLfyxA46uiMOvr7+0hRwFX1fQhagsIK+dfB5PA==
        -----END PUBLIC KEY-----
      redisNodeSize: cache.t2.small
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      frontendAutoScalingMinCount: 4
      frontendAutoScalingMaxCount: 6
      frontendTaskDefinitionCpu: 512
      frontendTaskDefinitionMemory: 1024
      ipAllowList: ["217.196.229.77/32","217.196.229.79/32","217.196.229.80/32","217.196.229.81/32","51.149.8.0/25","51.149.8.128/29"]
      cloudwatchLogRetentionInDays: 7
      orchToAuthSigningPublicKey: |
        -----BEGIN PUBLIC KEY-----
        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmzWAucozlF6eykmgikXj2kI03O7V
        WwuA51+3Ak+stF2dddC60WXEKhrFumKBUnE5GhJNg4v0iN948Mwl+vz5Xw==
        -----END PUBLIC KEY-----
      redisNodeSize: cache.t2.small
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      frontendAutoScalingMinCount: 4
      frontendAutoScalingMaxCount: 240
      frontendTaskDefinitionCpu: 1024
      frontendTaskDefinitionMemory: 2048
      ipAllowList: ["217.196.229.77/32","217.196.229.79/32","217.196.229.80/32","217.196.229.81/32","51.149.8.0/25","51.149.8.128/29"]
      cloudwatchLogRetentionInDays: 7
      orchToAuthSigningPublicKey: |
        -----BEGIN PUBLIC KEY-----
        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEw3VqLzY6ZFWmqruOpvMpPH8PWuQQ
        1zSWSgFy2sngA1GKybC0zuZluGHfZMnr/BGo+teQzbDCekLijPvlozXY1g==
        -----END PUBLIC KEY-----
      redisNodeSize: cache.m4.xlarge
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      frontendAutoScalingMinCount: 2
      frontendAutoScalingMaxCount: 4
      frontendTaskDefinitionCpu: 512
      frontendTaskDefinitionMemory: 1024
      ipAllowList: ["217.196.229.77/32","217.196.229.79/32","217.196.229.80/32","217.196.229.81/32","51.149.8.0/25","51.149.8.128/29"]
      cloudwatchLogRetentionInDays: 30
      orchToAuthSigningPublicKey: |
        -----BEGIN PUBLIC KEY-----
        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEzzwKLypUL89WVaeTbfBZu0Fws8T7
        ppx89XLVfgXIoCs2P//N5qdghvzgNIgVehQ7CkzyorO/lnRlWPfjCG4Oxw==
        -----END PUBLIC KEY-----
      redisNodeSize: cache.t2.small
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      frontendAutoScalingMinCount: 4
      frontendAutoScalingMaxCount: 240
      frontendTaskDefinitionCpu: 512
      frontendTaskDefinitionMemory: 1024
      ipAllowList: []
      cloudwatchLogRetentionInDays: 30
      orchToAuthSigningPublicKey: |
        -----BEGIN PUBLIC KEY-----
        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5iJXSuxgbfM6ADQVtNNDi7ED5ly5
        +3VZPbjHv+v0AjQ5Ps+avkXWKwOeScG9sS0cDf0utEXi3fN3cEraa9WuKQ==
        -----END PUBLIC KEY-----
      redisNodeSize: cache.m4.xlarge

Globals:
  Function:
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
    MemorySize: 1536
    Timeout: 30
    Runtime: java17
    Architectures:
      - x86_64
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:JAVA_LAYER}}'
        - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]

Resources:
  FrontendECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AWS::StackName}-cluster"
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-FrontendECSCluster"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  FrontendECSService:
    Type: AWS::ECS::Service
    DependsOn: ApplicationLoadBalancerListenerHTTPS
    Properties:
      Cluster: !Ref FrontendECSCluster
      LaunchType: FARGATE
      DesiredCount: 2
      HealthCheckGracePeriodSeconds: 15
      DeploymentConfiguration: !If
        - UseECSCanaryDeploymentStack
        - !Ref AWS::NoValue
        - MaximumPercent: 150
          MinimumHealthyPercent: 50
      DeploymentController:
        Type: !If
          - UseECSCanaryDeploymentStack
          - CODE_DEPLOY
          - ECS
      LoadBalancers: !If
        - UseECSCanaryDeploymentStack
        - !Ref AWS::NoValue
        - - ContainerName: !If [UseNginxSidecar, "nginx-sidecar", "frontend-application"]
            ContainerPort: !If [UseNginxSidecar, 8080, 3000]
            TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroupA
      NetworkConfiguration: !If
        - UseECSCanaryDeploymentStack
        - !Ref AWS::NoValue
        - AwsvpcConfiguration:
            AssignPublicIp: DISABLED
            SecurityGroups:
              - !GetAtt ContainerServiceSecurityGroup.GroupId
            Subnets:
              - Fn::ImportValue:
                  !Sub "${VpcStackName}-ProtectedSubnetIdA"
              - Fn::ImportValue:
                  !Sub "${VpcStackName}-ProtectedSubnetIdB"
              - Fn::ImportValue:
                  !Sub "${VpcStackName}-ProtectedSubnetIdC"
      PropagateTags: SERVICE
      TaskDefinition: !If
        - UseECSCanaryDeploymentStack
        - !Ref AWS::NoValue
        - !Ref TaskDefinition
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-FrontendECSService"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  FrontendScaleOutAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${FrontendECSCluster}/${FrontendECSService.Name}-AlarmScaleUp"
      AlarmDescription: >
        Metric alarm to trigger ECS scale up
      AlarmActions:
        - !Ref FrontendAutoScalingPolicyScaleOut
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Period: 60
      Statistic: Average
      Threshold: 50
      DatapointsToAlarm: 1
      Dimensions:
        - Name: ClusterName
          Value: !Ref FrontendECSCluster
        - Name: ServiceName
          Value: !GetAtt FrontendECSService.Name

  FrontendScaleInAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${FrontendECSCluster}/${FrontendECSService.Name}-AlarmScaleDown"
      AlarmDescription: >
        Metric alarm to trigger ECS scale down
      AlarmActions:
        - !Ref FrontendAutoScalingPolicyScaleIn
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Period: 60
      Statistic: Average
      Threshold: 40
      DatapointsToAlarm: 5
      Dimensions:
        - Name: ClusterName
          Value: !Ref FrontendECSCluster
        - Name: ServiceName
          Value: !GetAtt FrontendECSService.Name

  FrontendAutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !FindInMap [ EnvironmentConfiguration, !Ref Environment, frontendAutoScalingMaxCount ]
      MinCapacity: !FindInMap [ EnvironmentConfiguration, !Ref Environment, frontendAutoScalingMinCount ]
      ResourceId: !Join
        - '/'
        - - "service"
          - !Ref FrontendECSCluster
          - !GetAtt FrontendECSService.Name
      RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  FrontendAutoScalingPolicyScaleOut:
    DependsOn: FrontendAutoScalingTarget
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-FrontendAutoScalingPolicyScaleOut"
      PolicyType: StepScaling
      ResourceId: !Join
        - '/'
        - - "service"
          - !Ref FrontendECSCluster
          - !GetAtt FrontendECSService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        MinAdjustmentMagnitude: 10
        StepAdjustments:
          - ScalingAdjustment: 300
            MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 10
          - ScalingAdjustment: 600
            MetricIntervalLowerBound: 10
            MetricIntervalUpperBound: 30
          - ScalingAdjustment: 1000
            MetricIntervalLowerBound: 30

  FrontendAutoScalingPolicyScaleIn:
    DependsOn: FrontendAutoScalingTarget
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-FrontendAutoScalingPolicyScaleIn"
      PolicyType: StepScaling
      ResourceId: !Join
        - '/'
        - - "service"
          - !Ref FrontendECSCluster
          - !GetAtt FrontendECSService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 240
        MetricAggregationType: Average
        MinAdjustmentMagnitude: 5
        StepAdjustments:
          - ScalingAdjustment: -50
            MetricIntervalUpperBound: 0

  ContainerServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group to access the Container Service
      GroupName: !Join
        - "-"
        - - !Ref AWS::StackName
          - ContainerService
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - "/"
                          - Ref: AWS::StackId
      SecurityGroupIngress:
        - Description: Allow traffic from the load balancer on port 3000
          SourceSecurityGroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
          IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
        - Description: Allow traffic from the load balancer on port 8080
          SourceSecurityGroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ContainerServiceSecurityGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !If
        - UseSubEnvironment
        - !Sub "${SubEnvironment}-frontend-ecs-task-definition"
        - !Sub "${Environment}-frontend-ecs-task-definition"
      ContainerDefinitions:
        - Name: "frontend-application"
          Image: "CONTAINER-IMAGE-PLACEHOLDER"
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref FrontendTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-create-group: "true"
              awslogs-stream-prefix: !Ref AWS::StackName
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: FARGATE
              Value: 1
            - Name: API_BASE_URL
              Value: !If
                - IsNotProduction
                - !If
                    - UseSubEnvironment
                    - !Sub "https://oidc.${SubEnvironment}.${Environment}.account.gov.uk"
                    - !Sub "https://oidc.${Environment}.account.gov.uk"
                - "https://oidc.account.gov.uk"
            - Name: FRONTEND_API_BASE_URL
              Value: !If
                - IsNotProduction
                - !If
                    - UseSubEnvironment
                    - !Sub "https://auth.${SubEnvironment}.${Environment}.account.gov.uk/"
                    - !Sub "https://auth.${Environment}.account.gov.uk/"
                - "https://auth.account.gov.uk/"
            - Name: ACCOUNT_MANAGEMENT_URL
              Value: !If
                - IsNotProduction
                - !Sub "https://home.${Environment}.account.gov.uk"
                - "https://home.account.gov.uk"
            - Name: SUPPORT_ACCOUNT_RECOVERY
              Value: 1
            - Name: BASE_URL
              Value: !If
                - IsNotProduction
                - !If
                    - UseSubEnvironment
                    - !Sub "signin.${SubEnvironment}.${Environment}.account.gov.uk"
                    - !Sub "signin-sp.${Environment}.account.gov.uk"
                - "signin.account.gov.uk"
            - Name: GTM_ID
              Value: GTM-TK92W68
            - Name: REDIS_HOST
              Value: !GetAtt ApplicationReplicationGroup.PrimaryEndPoint.Address
            - Name: REDIS_PORT
              Value: !GetAtt ApplicationReplicationGroup.PrimaryEndPoint.Port
            - Name: SUPPORT_AUTHORIZE_CONTROLLER
              Value: 1
            - Name: ENCRYPTION_KEY_ID
              Value: !If
                - UseSubEnvironment
                - !Sub "alias/${SubEnvironment}-authentication-encryption-key-alias"
                - !Sub "alias/${Environment}-authentication-encryption-key-alias"
            - Name: ORCH_TO_AUTH_SIGNING_KEY
              Value: !If
                - UseSubEnvironment
                - !FindInMap [ EnvironmentConfiguration, !Ref SubEnvironment, orchToAuthSigningPublicKey ]
                - !FindInMap [ EnvironmentConfiguration, !Ref Environment, orchToAuthSigningPublicKey ]
            - Name: ORCH_TO_AUTH_CLIENT_ID
              Value: orchestrationAuth
            - Name: ORCH_TO_AUTH_AUDIENCE
              Value: !If
                - IsNotProduction
                - !If
                  - UseSubEnvironment
                  - !Sub "https://signin.${SubEnvironment}.${Environment}.account.gov.uk/"
                  - !Sub "https://signin-sp.${Environment}.account.gov.uk/"
                - "https://signin.account.gov.uk/"
            - Name: URL_FOR_SUPPORT_LINKS
              Value: !Sub
                - "https://${homeFQDN}/contact-gov-uk-one-login"
                - homeFQDN: !If
                  - IsNotProduction
                  - !Sub "home.${Environment}.account.gov.uk"
                  - "home.account.gov.uk"
            - Name: SERVICE_DOMAIN
              Value: !If [IsNotProduction, !Sub "${Environment}.account.gov.uk", "account.gov.uk"]
            - Name: PASSWORD_RESET_CODE_ENTERED_WRONG_BLOCKED_MINUTES
              Value: 1
            - Name: ACCOUNT_RECOVERY_CODE_ENTERED_WRONG_BLOCKED_MINUTES
              Value: 1
            - Name: CODE_REQUEST_BLOCKED_MINUTES
              Value: 1
            - Name: CODE_ENTERED_WRONG_BLOCKED_MINUTES
              Value: 1
            - Name: REDUCED_CODE_BLOCK_DURATION_MINUTES
              Value: 0.5
            - Name: SUPPORT_2FA_B4_PASSWORD_RESET
              Value: 1
            - Name: SUPPORT_ACCOUNT_INTERVENTIONS
              Value: 1
            - Name: SUPPORT_REAUTHENTICATION
              Value: 1
            - Name: EMAIL_ENTERED_WRONG_BLOCKED_MINUTES
              Value: 1
            - Name: SUPPORT_2HR_LOCKOUT
              Value: 1
            - Name: NO_PHOTO_ID_CONTACT_FORMS
              Value: 1
            - Name: SUPPORT_CHECK_EMAIL_FRAUD
              Value: 1
            - Name: LANGUAGE_TOGGLE_ENABLED
              Value: 1
            - Name: PROVE_IDENTITY_WELCOME_ENABLED
              Value: 0
            - Name: GA4_DISABLED
              Value: true
            - Name: UA_DISABLED
              Value: false
            - Name: UNIVERSAL_ANALYTICS_GTM_CONTAINER_ID
              Value: GTM-TK92W68
            - Name: GOOGLE_ANALYTICS_4_GTM_CONTAINER_ID
              Value: GTM-KD86CMZ
            - Name: ANALYTICS_COOKIE_DOMAIN
              Value: !If [IsNotProduction, !Sub ".${Environment}.account.gov.uk", ".account.gov.uk"]
            - Name: SUPPORT_NEW_IPV_SPINNER
              Value: !If [IsNotProduction, "1", "0"]
          Secrets:
            - Name: API_KEY
              ValueFrom: !If
                - UseSubEnvironment
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${SubEnvironment}/frontend-api-key"
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${Environment}/frontend-api-key"
            - Name: REDIS_PASSWORD
              ValueFrom: !Ref ApplicationAuthPass
            - Name: SESSION_EXPIRY
              ValueFrom: !If
                - UseSubEnvironment
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${SubEnvironment}/session_expiry"
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${Environment}/session_expiry"
            - Name: SESSION_SECRET
              ValueFrom: !If
                - UseSubEnvironment
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${SubEnvironment}/session_secret"
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${Environment}/session_secret"
            - Name: SMARTAGENT_API_KEY
              ValueFrom: !If
                - UseSubEnvironment
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${SubEnvironment}/smartagent_api_key"
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${Environment}/smartagent_api_key"
            - Name: SMARTAGENT_API_URL
              ValueFrom: !If
                - UseSubEnvironment
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${SubEnvironment}/smartagent_api_key"
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${Environment}/smartagent_api_url"
            - Name: SMARTAGENT_WEBFORM_ID
              ValueFrom: !If
                - UseSubEnvironment
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${SubEnvironment}/smartagent_webform_id"
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${Environment}/smartagent_webform_id"
            - Name: DT_TENANT
              ValueFrom: !Join
                - ''
                - - !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
                  - ':DT_TENANT::'
            - Name: DT_TENANTTOKEN
              ValueFrom: !Join
                - ''
                - - !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
                  - ':DT_TENANTTOKEN::'
            - Name: DT_CONNECTION_POINT
              ValueFrom: !Join
              - ''
              - - !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
                - ':DT_CONNECTION_POINT::'
        - !If
          - UseNginxSidecar
          - Name: "nginx-sidecar"
            Image: !Sub "${BasicAuthSidecarRegistry}:GIT-SHA-PLACEHOLDER"
            PortMappings:
              - ContainerPort: 8080
                HostPort: 8080
                Protocol: tcp
            Essential: true
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref FrontendTaskLogGroup
                awslogs-region: !Ref AWS::Region
                awslogs-create-group: "true"
                awslogs-stream-prefix: !Ref AWS::StackName
            Environment:
              - Name: PROXY_PASS
                Value: "http://localhost:3000"
              - Name: NGINX_PORT
                Value: "8080"
              - Name: NGINX_HOST
                Value: !If
                  - UseSubEnvironment
                  - !Sub "signin.${SubEnvironment}.${Environment}.account.gov.uk"
                  - !Sub "signin-sp.${Environment}.account.gov.uk"
              - Name: IP_ALLOW_LIST
                Value:
                  Fn::ToJsonString:
                    !FindInMap [ EnvironmentConfiguration, !Ref Environment, ipAllowList ]
              - Name: TRUSTED_PROXIES
                Value:
                  Fn::ToJsonString:
                    - Fn::ImportValue:
                        !Sub "${VpcStackName}-FirewallSubnetACidr"
                    - Fn::ImportValue:
                        !Sub "${VpcStackName}-FirewallSubnetBCidr"
                    - Fn::ImportValue:
                        !Sub "${VpcStackName}-FirewallSubnetCCidr"
            Secrets:
              - Name: BASIC_AUTH_USERNAME
                ValueFrom: !If
                  - UseSubEnvironment
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${SubEnvironment}/basic_auth_username"
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${Environment}/basic_auth_username"
              - Name: BASIC_AUTH_PASSWORD
                ValueFrom: !If
                  - UseSubEnvironment
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${SubEnvironment}/basic_auth_password"
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/deploy/${Environment}/basic_auth_password"
          - !Ref AWS::NoValue
      Cpu: !FindInMap [ EnvironmentConfiguration, !Ref Environment, frontendTaskDefinitionCpu ]
      Memory: !FindInMap [ EnvironmentConfiguration, !Ref Environment, frontendTaskDefinitionMemory ]
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskDefinition"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      Policies:
        - PolicyName: AllowGetParameters
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"
              - Effect: Allow
                Action:
                  - secretsmanager:ListSecrets                                # pragma: allowlist secret
                  - secretsmanager:GetSecretValue                             # pragma: allowlist secret
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*" # pragma: allowlist secret
        - PolicyName: AllowDecryptOfParameters
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
        - PolicyName: CreateLogGroup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
        - PolicyName: GetDynatraceSecret
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:ListSecrets                                # pragma: allowlist secret
                  - secretsmanager:GetSecretValue                             # pragma: allowlist secret
                Resource:
                  - arn:aws:secretsmanager:eu-west-2:216552277552:secret:*    # pragma: allowlist secret
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - arn:aws:kms:eu-west-2:216552277552:key/*
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskExecutionRole"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AllowGetParameters
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"
        - PolicyName: AllowAccessToAuthenticationKmsEncryptionKey
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt*
                Resource:
                  - !GetAtt AuthEncryptionKmsKey.Arn
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskRole"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  #
  # CloudFront distribution
  #

  FrontendDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !If
        - UseSubEnvironment
        - !Sub "signin.${SubEnvironment}.${Environment}.account.gov.uk"
        - !Sub "signin-sp.${Environment}.account.gov.uk"
      Type: A
      HostedZoneId: !Sub
        - '{{resolve:ssm:/deploy/${env}/signin_route53_hostedzone_id}}'
        - env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      AliasTarget:
        EvaluateTargetHealth: false
        DNSName:
          Fn::ImportValue: !Sub
            - "${CFDistributionStackName}-DistributionDomain"
            - CFDistributionStackName: !FindInMap
              - EnvironmentConfiguration
              - !If
                - UseSubEnvironment
                - !Ref SubEnvironment
                - !Ref Environment
              - cloudfrontDistributionStackName
              - DefaultValue: "auth-fe-cloudfront"
        HostedZoneId: Z2FDTNDATAQYW2
        # This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution

  #
  # Load balancing
  #

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !If
        - UseSubEnvironment
        - !Sub "${SubEnvironment}-frontend"
        - !Sub "${Environment}-frontend"
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      Subnets:
        - Fn::ImportValue:
            !Sub "${VpcStackName}-FirewallSubnetIdA"
        - Fn::ImportValue:
            !Sub "${VpcStackName}-FirewallSubnetIdB"
        - Fn::ImportValue:
            !Sub "${VpcStackName}-FirewallSubnetIdC"
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: "true"
        - Key: access_logs.s3.bucket
          Value: !Ref AccessLogsBucket
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: "true"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancer"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ApplicationLoadBalancerTargetGroupA:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !If
        - UseSubEnvironment
        - !Sub "${SubEnvironment}-frontend-target-a"
        - !Sub "${Environment}-frontend-target-a"
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 3
      HealthCheckPath: /healthcheck/
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Matcher:
        HttpCode: "200"
      TargetType: ip
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerTargetGroupA"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ApplicationLoadBalancerTargetGroupB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: UseECSCanaryDeploymentStack
    Properties:
      Name: !If
        - UseSubEnvironment
        - !Sub "${SubEnvironment}-frontend-target-b"
        - !Sub "${Environment}-frontend-target-b"
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 3
      HealthCheckPath: /healthcheck/
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Matcher:
        HttpCode: "200"
      TargetType: ip
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerTargetGroupB"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ApplicationLoadBalancerDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !If
        - UseSubEnvironment
        - !Sub "origin.signin.${SubEnvironment}.${Environment}.account.gov.uk"
        - !Sub "origin.signin-sp.${Environment}.account.gov.uk"
      Type: A
      HostedZoneId: !Sub
        - '{{resolve:ssm:/deploy/${env}/signin_route53_hostedzone_id}}'
        - env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      AliasTarget:
        EvaluateTargetHealth: false
        DNSName: !Sub
          - "dualstack.${ALBDNSName}"
          - ALBDNSName: !GetAtt ApplicationLoadBalancer.DNSName
        HostedZoneId: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID

  ApplicationLoadBalancerListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroupA
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Sub
          - '{{resolve:ssm:/deploy/${env}/signin_certificate_arn}}'
          - env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      SslPolicy: "ELBSecurityPolicy-FS-1-2-Res-2020-10"

  ApplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    # checkov:skip=CKV_AWS_2:Ignored as this only redirects HTTP to HTTPS.
    # checkov:skip=CKV_AWS_103:Ignored as only redirects HTTP to HTTPS.
    Metadata:
      checkov:
        skip:
          - id: "CKV_AWS_2"
            comment: "Ignored as this only redirects HTTP to HTTPS."
          - id: "CKV_AWS_103"
            comment: "Ignored as only redirects HTTP to HTTPS."
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Port: 443
            Protocol: HTTPS
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ApplicationLoadBalancerListenerRuleRobots:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: >
              "user-agent: *"
              "disallow: /"
            StatusCode: 200
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/robots.txt"
      ListenerArn: !Ref ApplicationLoadBalancerListenerHTTPS
      Priority: 10

  ApplicationLoadBalancerListenerServiceDownRule:
    Condition: DeployServiceDownPage
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ServiceDownLoadBalancerTargetGroup
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/service-page-disabled/*"
      ListenerArn: !Ref ApplicationLoadBalancerListenerHTTPS
      Priority: 1000

  ApplicationLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for the Application Load Balancer
      GroupName: !Join
        - "-"
        - - !Ref AWS::StackName
          - ApplicationLoadBalancer
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - "/"
                          - Ref: AWS::StackId
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerSecurityGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ApplicationLoadBalancerSecurityGroupHTTPIngress:
    Type: AWS::EC2::SecurityGroupIngress
    # checkov:skip=CKV_AWS_260:Ignored as this only redirects HTTP to HTTPS.
    Metadata:
      checkov:
        skip:
          - id: "CKV_AWS_260"
            comment: "Ignored as this only redirects HTTP to HTTPS."
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      CidrIp: 0.0.0.0/0
      Description: Allow traffic from anywhere on port 80
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80

  ApplicationLoadBalancerSecurityGroupHTTPSIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      CidrIp: 0.0.0.0/0
      Description: Allow traffic from anywhere on port 443
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443

  ApplicationLoadBalancerSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      DestinationSecurityGroupId: !GetAtt ContainerServiceSecurityGroup.GroupId
      Description: Allow traffic to Container Service on port 3000
      IpProtocol: tcp
      FromPort: 3000
      ToPort: 3000

  ApplicationLoadBalancerSecurityGroupEgressNginx:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      DestinationSecurityGroupId: !GetAtt ContainerServiceSecurityGroup.GroupId
      Description: Allow traffic to Container Service on port 8080
      IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080

  ApplicationLoadBalancerSecurityGroupEgressServiceDownPage:
    Condition: DeployServiceDownPage
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      DestinationSecurityGroupId: !GetAtt ServiceDownSecurityGroup.GroupId
      Description: Allow traffic to Service down page on port 8080
      IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080

  #
  # ECS Alarms
  #

  ELB5XXAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseECSCanaryDeploymentStack
    Properties:
      AlarmDescription: >
        The number of HTTP 5XX server error codes that originate from the load balancer.
        This count does not include any response codes generated by the targets.
      MetricName: HTTPCode_ELB_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref ApplicationLoadBalancer
      Period: 60
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 2
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  ELB4XXAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseECSCanaryDeploymentStack
    Properties:
      AlarmDescription: >
        Based on anomaly detection, the number of HTTP 4XX server error codes that
        originate from the load balancer. This count does not include any response
        codes generated by the targets.
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      ThresholdMetricId: ad1
      ComparisonOperator: GreaterThanUpperThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: true
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: true
          MetricStat:
            Metric:
              Namespace: AWS/ApplicationELB
              MetricName: HTTPCode_ELB_4XX_Count
              Dimensions:
                - Name: LoadBalancer
                  Value: !GetAtt ApplicationLoadBalancer.LoadBalancerFullName
            Period: 60
            Stat: Sum

  #
  # Canary Deployment
  #

  ECSCanaryDeploymentStack:
    Type: AWS::CloudFormation::Stack
    Condition: UseECSCanaryDeploymentStack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: https://template-storage-templatebucket-1upzyw6v9cs42.s3.amazonaws.com/ecs-canary-deployment/template.yaml?versionId=5RRU1nfKQD_d08FKttr8W7pzrAsqQiUM # v2.1.1
      Parameters:
        VpcId: !Sub ${VpcStackName}-VpcId
        Subnets: !Join
          - ","
          - - Fn::ImportValue:
                !Sub "${VpcStackName}-ProtectedSubnetIdA"
            - Fn::ImportValue:
                !Sub "${VpcStackName}-ProtectedSubnetIdB"
            - Fn::ImportValue:
                !Sub "${VpcStackName}-ProtectedSubnetIdC"
        SecurityGroups: !GetAtt ContainerServiceSecurityGroup.GroupId
        PermissionsBoundary:
          Fn::ImportValue: !Sub "${AWS::StackName}-ECSCanaryPermissionsBoundaryArn"
        CodeSigningConfigArn: !If
          - UseCodeSigning
          - !Ref CodeSigningConfigArn
          - !Ref AWS::NoValue
        ECSClusterName: !Ref FrontendECSCluster
        ECSServiceName: !GetAtt FrontendECSService.Name
        TargetGroupName: !GetAtt ApplicationLoadBalancerTargetGroupA.TargetGroupName
        GreenTargetGroupName: !GetAtt ApplicationLoadBalancerTargetGroupB.TargetGroupName
        LoadBalancerListenerARN: !Ref ApplicationLoadBalancerListenerHTTPS
        ECSServiceTaskDefinition: !Ref TaskDefinition
        DeploymentStrategy: !Ref DeploymentStrategy
        ContainerName: !If [UseNginxSidecar, "nginx-sidecar", "frontend-application"]
        ContainerPort: !If [UseNginxSidecar, 8080, 3000]
        CloudWatchAlarms: !Sub
          - "${ELB5XXAlarm},${ELB4XXAnomalyAlarm}"
          - ELB5XXAlarm: !Ref ELB5XXAlarm
            ELB4XXAnomalyAlarm: !Ref ELB4XXAnomalyAlarm

  #
  # Service down page
  #

  ServiceDownECSService:
    Condition: DeployServiceDownPage
    Type: AWS::ECS::Service
    DependsOn: ApplicationLoadBalancerListenerHTTPS
    Properties:
      ServiceName: !Sub "${AWS::StackName}-ServiceDownECSService"
      Cluster: !Ref FrontendECSCluster
      LaunchType: FARGATE
      DesiredCount: 2
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 50
      LoadBalancers:
        - ContainerName: "service-down-page"
          ContainerPort: 8080
          TargetGroupArn: !Ref ServiceDownLoadBalancerTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !GetAtt ServiceDownSecurityGroup.GroupId
          Subnets:
            - Fn::ImportValue:
                !Sub "${VpcStackName}-PrivateSubnetIdA"
            - Fn::ImportValue:
                !Sub "${VpcStackName}-PrivateSubnetIdB"
            - Fn::ImportValue:
                !Sub "${VpcStackName}-PrivateSubnetIdC"
      PropagateTags: SERVICE
      TaskDefinition: !Ref ServiceDownTaskDefinition
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ServiceDownECSService"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ServiceDownSecurityGroup:
    Condition: DeployServiceDownPage
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group to access the Service down page
      GroupName: !Join
        - "-"
        - - !Ref AWS::StackName
          - ServiceDownPage
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - "/"
                          - Ref: AWS::StackId
      SecurityGroupIngress:
        - Description: Allow traffic from the load balancer on port 8080
          SourceSecurityGroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ServiceDownSecurityGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ServiceDownTaskDefinition:
    Condition: DeployServiceDownPage
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Environment}-frontend-service-down-page-ecs-task-definition"
      ContainerDefinitions:
        - Name: "service-down-page"
          Image: !Sub "${ServiceDownPageRegistry}:GIT-SHA-PLACEHOLDER"
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ServiceDownTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-create-group: "true"
              awslogs-stream-prefix: !Ref AWS::StackName
      Cpu: 512
      Memory: 1024
      ExecutionRoleArn: !GetAtt ServiceDownTaskExecutionRole.Arn
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ServiceDownTaskDefinition"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ServiceDownTaskExecutionRole:
    Condition: DeployServiceDownPage
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      Policies:
        - PolicyName: CreateLogGroup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ServiceDownTaskExecutionRole"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ServiceDownLoadBalancerTargetGroup:
    Condition: DeployServiceDownPage
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${Environment}-fe-service-down"
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 3
      HealthCheckPath: /healthcheck/
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Matcher:
        HttpCode: "200"
      TargetType: ip
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ServiceDownLoadBalancerTargetGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ServiceDownTaskLogGroup:
    Condition: DeployServiceDownPage
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt KmsKey.Arn
      LogGroupName: !Sub "/ecs/${Environment}-service-down-page"
      RetentionInDays: !FindInMap [ EnvironmentConfiguration, !Ref Environment, cloudwatchLogRetentionInDays ]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ServiceDownTaskLogGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  #
  # Logging
  #

  AccessLogsBucket:
    Type: AWS::S3::Bucket
    # checkov:skip=CKV_AWS_18:This is the access logs bucket. It should not log itself.
    Metadata:
      checkov:
        skip:
          - id: "CKV_AWS_18"
            comment: "This is the access logs bucket. It should not log itself"
    Properties:
      BucketName: !Join
        - "-"
        - - !Ref AWS::StackName
          - logs
          - Fn::Select:
              - 4
              - Fn::Split:
                  - '-'
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - /
                          - Ref: AWS::StackId
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-AccessLogsBucket"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_18

  AccessLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AccessLogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowLoadBalancerToLogToS3
            Effect: Allow
            Principal:
              AWS: !Sub
                - "arn:aws:iam::${ElbAccountId}:root"
                - ElbAccountId: !FindInMap [ ElasticLoadBalancerAccountIds, !Ref AWS::Region, AccountId ]
            Action:
              - s3:PutObject
            Resource: !Sub "${AccessLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
          - Sid: AllowAwsLogDeliveryToLogToS3
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:PutObject
            Resource: !Sub "${AccessLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                "s3:x-amz-acl": bucket-owner-full-control
                "aws:SourceAccount": !Ref AWS::AccountId
          - Sid: AllowAwsLogDeliveryToReadBucketAcl
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource: !GetAtt AccessLogsBucket.Arn
            Condition:
              StringEquals:
                "aws:SourceAccount": !Ref AWS::AccountId
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Action:
              - "s3:*"
            Resource:
              - !Sub "${AccessLogsBucket.Arn}/*"
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"

  FrontendTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt KmsKey.Arn
      LogGroupName: !Sub "/ecs/${Environment}-frontend"
      RetentionInDays: !FindInMap [ EnvironmentConfiguration, !Ref Environment, cloudwatchLogRetentionInDays ]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-FrontendTaskLogGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  #
  #  ElastiCache
  #

  ApplicationCacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Sub "${AWS::StackName}-application-cache-subnet-group"
      Description: Cache Subnet Group
      SubnetIds:
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PrivateSubnetIdA"
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PrivateSubnetIdB"
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PrivateSubnetIdC"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationCacheSubnetGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ApplicationElastiCacheLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt KmsKey.Arn
      LogGroupName: !Sub "/aws/vendedlogs/${AWS::StackName}-elasticache-replication-group-logs"
      RetentionInDays: !FindInMap [ EnvironmentConfiguration, !Ref Environment, cloudwatchLogRetentionInDays ]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationElastiCacheCluster"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ApplicationElastiCacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Frontend Redis Security Group
      SecurityGroupIngress:
        - Description: Allow inbound on port 6379
          SourceSecurityGroupId: !GetAtt ContainerServiceSecurityGroup.GroupId
          FromPort: 6379
          IpProtocol: tcp
          ToPort: 6379
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"

  ApplicationAuthPass:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "${AWS::StackName}-elasticache-application"
      Description: Random password for elastiCache
      GenerateSecretString:
        ExcludeLowercase: false
        ExcludeNumbers: false
        ExcludePunctuation: true
        ExcludeUppercase: false
        IncludeSpace: false
        PasswordLength: 32
      KmsKeyId: !GetAtt KmsKey.Arn
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationAuthPass"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  ApplicationReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupId: !Sub "${AWS::StackName}-session-cache"
      ReplicationGroupDescription: A Redis cluster for storing user session data for the frontend
      TransitEncryptionEnabled: true
      AtRestEncryptionEnabled: true
      AuthToken: !Sub '{{resolve:secretsmanager:${ApplicationAuthPass}}}'
      AutomaticFailoverEnabled: true
      CacheNodeType: !FindInMap [ EnvironmentConfiguration, !Ref Environment, redisNodeSize ]
      CacheSubnetGroupName: !Ref ApplicationCacheSubnetGroup
      CacheParameterGroupName: default.redis6.x
      Engine: redis
      EngineVersion: '6.2'
      LogDeliveryConfigurations:
        - DestinationDetails:
            CloudWatchLogsDetails:
              LogGroup: !Ref ApplicationElastiCacheLogGroup
          DestinationType: cloudwatch-logs
          LogFormat: json
          LogType: engine-log
      PreferredMaintenanceWindow: "sun:22:00-sun:23:00"
      MultiAZEnabled: true
      NumCacheClusters: 3
      SecurityGroupIds:
        - !Ref ApplicationElastiCacheSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationElastiCacheCluster"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  #
  # Encryption
  #

  AuthEncryptionKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS encryption key for decrypting requests from Orchestration"
      KeyUsage: "ENCRYPT_DECRYPT"
      KeySpec: "RSA_2048"
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-AuthEncryptionKmsKey"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml

  AuthEncryptionKmsAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !If
        - UseSubEnvironment
        - !Sub "alias/${SubEnvironment}-authentication-encryption-key-alias"
        - !Sub "alias/${Environment}-authentication-encryption-key-alias"
      TargetKeyId: !Ref AuthEncryptionKmsKey

  KmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-KmsKey"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: "auth-frontend"
        - Key: Source
          Value: govuk-one-login/authentication-frontend/cloudformation/deploy/template.yaml
